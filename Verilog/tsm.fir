circuit tsm :
  module gated_clk_cell :
    output io : { flip clk_in : Clock, flip global_en : UInt<1>, flip module_en : UInt<1>, flip local_en : UInt<1>, flip external_en : UInt<1>, flip pad_yy_icg_scan_en : UInt<1>, clk_out : Clock}

    wire clk_en_bf_latch : UInt<1> @[l1sm.scala 353:37]
    wire SE : UInt<1> @[l1sm.scala 354:24]
    node _clk_en_bf_latch_T = or(io.module_en, io.local_en) @[l1sm.scala 356:52]
    node _clk_en_bf_latch_T_1 = and(io.global_en, _clk_en_bf_latch_T) @[l1sm.scala 356:36]
    node _clk_en_bf_latch_T_2 = or(_clk_en_bf_latch_T_1, io.external_en) @[l1sm.scala 356:69]
    clk_en_bf_latch <= _clk_en_bf_latch_T_2 @[l1sm.scala 356:19]
    SE <= io.pad_yy_icg_scan_en @[l1sm.scala 357:6]
    io.clk_out <= io.clk_in @[l1sm.scala 358:14]

  module tsm :
    output io : { flip cp0_lsu_icg_en : UInt<1>, flip cp0_yy_clk_en : UInt<1>, flip cp0_yy_priv_mode : UInt<2>, flip cpurst_b : UInt<1>, flip entry_act_vld : UInt<1>, flip entry_biu_pe_req_grnt : UInt<1>, flip entry_clk : Clock, flip entry_create_dp_vld : UInt<1>, flip entry_create_vld : UInt<1>, flip entry_from_lfb_dcache_hit : UInt<1>, flip entry_from_lfb_dcache_miss : UInt<1>, flip entry_l1_biu_pe_req_set : UInt<1>, flip entry_l1_mmu_pe_req_set : UInt<1>, flip entry_l2_biu_pe_req_set : UInt<1>, flip entry_l2_mmu_pe_req_set : UInt<1>, flip entry_mmu_pe_req_grnt : UInt<1>, flip entry_pf_inst_vld : UInt<1>, flip entry_pop_vld : UInt<1>, flip entry_reinit_vld : UInt<1>, flip entry_stride : UInt<11>, flip entry_stride_neg : UInt<1>, flip forever_cpuclk : Clock, flip pad_yy_icg_scan_en : UInt<1>, flip pipe_va : UInt<40>, entry_biu_pe_req : UInt<1>, entry_biu_pe_req_src : UInt<2>, entry_dcache_hit_pop_req : UInt<1>, entry_inst_new_va : UInt<40>, entry_mmu_pe_req : UInt<1>, entry_mmu_pe_req_src : UInt<2>, entry_priv_mode : UInt<2>, entry_tsm_is_judge : UInt<1>, entry_vld : UInt<1>}

    wire wire : { entry_biu_pe_req_set : UInt<1>, entry_biu_pe_req_set_src : UInt<2>, entry_inst_new_va_cross_4k : UInt<1>, entry_mmu_pe_req_set : UInt<1>, entry_mmu_pe_req_set_src : UInt<2>, entry_pf_inst_vld_clk : Clock, entry_pf_inst_vld_clk_en : UInt<1>, entry_pipe_va_add_stride : UInt<40>, entry_stride_ext : UInt<40>, entry_sum_4k : UInt<13>} @[tsm.scala 71:18]
    node _wire_entry_pf_inst_vld_clk_en_T = and(io.entry_vld, io.entry_pf_inst_vld) @[tsm.scala 81:49]
    wire.entry_pf_inst_vld_clk_en <= _wire_entry_pf_inst_vld_clk_en_T @[tsm.scala 81:33]
    inst gated_clk_cell of gated_clk_cell @[tsm.scala 83:29]
    gated_clk_cell.io.clk_in <= io.forever_cpuclk @[tsm.scala 84:24]
    wire.entry_pf_inst_vld_clk <= gated_clk_cell.io.clk_out @[tsm.scala 85:30]
    gated_clk_cell.io.external_en <= UInt<1>("h0") @[tsm.scala 86:29]
    gated_clk_cell.io.global_en <= io.cp0_yy_clk_en @[tsm.scala 87:27]
    gated_clk_cell.io.local_en <= wire.entry_pf_inst_vld_clk_en @[tsm.scala 88:26]
    gated_clk_cell.io.module_en <= io.cp0_lsu_icg_en @[tsm.scala 89:27]
    gated_clk_cell.io.pad_yy_icg_scan_en <= io.pad_yy_icg_scan_en @[tsm.scala 90:36]
    node _T = bits(io.cpurst_b, 0, 0) @[tsm.scala 94:49]
    node _T_1 = eq(_T, UInt<1>("h0")) @[tsm.scala 94:36]
    node _T_2 = asAsyncReset(_T_1) @[tsm.scala 94:57]
    reg state : UInt<2>, io.entry_clk with :
      reset => (_T_2, UInt<1>("h0")) @[tsm.scala 95:24]
    when io.entry_pop_vld : @[tsm.scala 97:28]
      node _state_T = asUInt(UInt<1>("h0")) @[tsm.scala 98:26]
      state <= _state_T @[tsm.scala 98:13]
    else :
      node _state_T_1 = asUInt(UInt<1>("h0")) @[tsm.scala 100:26]
      state <= _state_T_1 @[tsm.scala 100:13]
      node _T_3 = asUInt(UInt<1>("h0")) @[tsm.scala 101:21]
      node _T_4 = eq(_T_3, state) @[tsm.scala 101:21]
      when _T_4 : @[tsm.scala 101:21]
        when io.entry_create_vld : @[tsm.scala 103:37]
          node _state_T_2 = asUInt(UInt<2>("h2")) @[tsm.scala 104:44]
          state <= _state_T_2 @[tsm.scala 104:19]
        else :
          node _state_T_3 = asUInt(UInt<1>("h0")) @[tsm.scala 106:32]
          state <= _state_T_3 @[tsm.scala 106:19]
      else :
        node _T_5 = asUInt(UInt<2>("h2")) @[tsm.scala 101:21]
        node _T_6 = eq(_T_5, state) @[tsm.scala 101:21]
        when _T_6 : @[tsm.scala 101:21]
          node _T_7 = eq(wire.entry_inst_new_va_cross_4k, UInt<1>("h0")) @[tsm.scala 110:36]
          node _T_8 = and(io.entry_act_vld, _T_7) @[tsm.scala 110:33]
          node _T_9 = eq(io.entry_reinit_vld, UInt<1>("h0")) @[tsm.scala 110:72]
          node _T_10 = and(_T_8, _T_9) @[tsm.scala 110:69]
          when _T_10 : @[tsm.scala 110:94]
            node _state_T_4 = asUInt(UInt<2>("h3")) @[tsm.scala 111:33]
            state <= _state_T_4 @[tsm.scala 111:19]
          else :
            node _state_T_5 = asUInt(UInt<2>("h2")) @[tsm.scala 113:44]
            state <= _state_T_5 @[tsm.scala 113:19]
        else :
          node _T_11 = asUInt(UInt<2>("h3")) @[tsm.scala 101:21]
          node _T_12 = eq(_T_11, state) @[tsm.scala 101:21]
          when _T_12 : @[tsm.scala 101:21]
            when io.entry_reinit_vld : @[tsm.scala 117:37]
              node _state_T_6 = asUInt(UInt<2>("h2")) @[tsm.scala 118:44]
              state <= _state_T_6 @[tsm.scala 118:19]
            else :
              node _state_T_7 = asUInt(UInt<2>("h3")) @[tsm.scala 120:33]
              state <= _state_T_7 @[tsm.scala 120:19]
    node _io_entry_vld_T = bits(state, 1, 1) @[tsm.scala 128:33]
    io.entry_vld <= _io_entry_vld_T @[tsm.scala 128:18]
    node _io_entry_tsm_is_judge_T = asUInt(UInt<2>("h3")) @[tsm.scala 129:58]
    node _io_entry_tsm_is_judge_T_1 = eq(state, _io_entry_tsm_is_judge_T) @[tsm.scala 129:43]
    io.entry_tsm_is_judge <= _io_entry_tsm_is_judge_T_1 @[tsm.scala 129:27]
    node _T_13 = bits(io.cpurst_b, 0, 0) @[tsm.scala 134:62]
    node _T_14 = eq(_T_13, UInt<1>("h0")) @[tsm.scala 134:49]
    node _T_15 = asAsyncReset(_T_14) @[tsm.scala 134:70]
    reg entry_inst_new_va : UInt<40>, wire.entry_pf_inst_vld_clk with :
      reset => (_T_15, UInt<40>("h0")) @[tsm.scala 135:36]
    reg entry_priv_mode : UInt<2>, wire.entry_pf_inst_vld_clk with :
      reset => (_T_15, UInt<2>("h0")) @[tsm.scala 136:34]
    when io.entry_pf_inst_vld : @[tsm.scala 137:31]
      node _entry_inst_new_va_T = mux(UInt<1>("h0"), UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 74:12]
      node _entry_inst_new_va_T_1 = bits(wire.entry_pipe_va_add_stride, 31, 0) @[tsm.scala 138:114]
      node _entry_inst_new_va_T_2 = cat(_entry_inst_new_va_T, _entry_inst_new_va_T_1) @[tsm.scala 138:82]
      entry_inst_new_va <= _entry_inst_new_va_T_2 @[tsm.scala 138:25]
      node _entry_priv_mode_T = bits(io.cp0_yy_priv_mode, 1, 0) @[tsm.scala 139:45]
      entry_priv_mode <= _entry_priv_mode_T @[tsm.scala 139:23]
    io.entry_inst_new_va <= entry_inst_new_va @[tsm.scala 141:26]
    io.entry_priv_mode <= entry_priv_mode @[tsm.scala 142:24]
    node _T_16 = bits(io.cpurst_b, 0, 0) @[tsm.scala 148:48]
    node _T_17 = eq(_T_16, UInt<1>("h0")) @[tsm.scala 148:35]
    node _T_18 = asAsyncReset(_T_17) @[tsm.scala 148:56]
    reg entry_already_dcache_hit : UInt<1>, io.entry_clk with :
      reset => (_T_18, UInt<1>("h0")) @[tsm.scala 149:43]
    node _T_19 = or(io.entry_create_dp_vld, io.entry_from_lfb_dcache_miss) @[tsm.scala 150:33]
    when _T_19 : @[tsm.scala 150:66]
      entry_already_dcache_hit <= UInt<1>("h0") @[tsm.scala 151:32]
    else :
      when io.entry_from_lfb_dcache_hit : @[tsm.scala 152:45]
        entry_already_dcache_hit <= UInt<1>("h1") @[tsm.scala 153:32]
    node _io_entry_dcache_hit_pop_req_T = bits(entry_already_dcache_hit, 0, 0) @[tsm.scala 155:61]
    node _io_entry_dcache_hit_pop_req_T_1 = and(_io_entry_dcache_hit_pop_req_T, io.entry_from_lfb_dcache_hit) @[tsm.scala 155:68]
    io.entry_dcache_hit_pop_req <= _io_entry_dcache_hit_pop_req_T_1 @[tsm.scala 155:33]
    node _T_20 = bits(io.cpurst_b, 0, 0) @[tsm.scala 160:48]
    node _T_21 = eq(_T_20, UInt<1>("h0")) @[tsm.scala 160:35]
    node _T_22 = asAsyncReset(_T_21) @[tsm.scala 160:56]
    reg entry_biu_pe_req : UInt<1>, io.entry_clk with :
      reset => (_T_22, UInt<1>("h0")) @[tsm.scala 161:35]
    reg entry_biu_pe_req_src : UInt<2>, io.entry_clk with :
      reset => (_T_22, UInt<2>("h0")) @[tsm.scala 162:39]
    node _T_23 = or(io.entry_pop_vld, io.entry_biu_pe_req_grnt) @[tsm.scala 163:27]
    when _T_23 : @[tsm.scala 163:55]
      entry_biu_pe_req <= UInt<1>("h0") @[tsm.scala 164:24]
      entry_biu_pe_req_src <= UInt<2>("h0") @[tsm.scala 165:28]
    else :
      node _T_24 = bits(wire.entry_biu_pe_req_set, 0, 0) @[tsm.scala 166:42]
      when _T_24 : @[tsm.scala 166:49]
        entry_biu_pe_req <= UInt<1>("h1") @[tsm.scala 167:24]
        node _entry_biu_pe_req_src_T = or(entry_biu_pe_req_src, wire.entry_biu_pe_req_set_src) @[tsm.scala 168:52]
        entry_biu_pe_req_src <= _entry_biu_pe_req_src_T @[tsm.scala 168:28]
    io.entry_biu_pe_req <= entry_biu_pe_req @[tsm.scala 170:25]
    io.entry_biu_pe_req_src <= entry_biu_pe_req_src @[tsm.scala 171:29]
    node _T_25 = bits(io.cpurst_b, 0, 0) @[tsm.scala 175:48]
    node _T_26 = eq(_T_25, UInt<1>("h0")) @[tsm.scala 175:35]
    node _T_27 = asAsyncReset(_T_26) @[tsm.scala 175:56]
    reg entry_mmu_pe_req : UInt<1>, io.entry_clk with :
      reset => (_T_27, UInt<1>("h0")) @[tsm.scala 176:35]
    reg entry_mmu_pe_req_src : UInt<2>, io.entry_clk with :
      reset => (_T_27, UInt<2>("h0")) @[tsm.scala 177:39]
    node _T_28 = or(io.entry_pop_vld, io.entry_mmu_pe_req_grnt) @[tsm.scala 178:27]
    when _T_28 : @[tsm.scala 178:55]
      entry_mmu_pe_req <= UInt<1>("h0") @[tsm.scala 179:24]
      entry_mmu_pe_req_src <= UInt<2>("h0") @[tsm.scala 180:28]
    else :
      node _T_29 = bits(wire.entry_mmu_pe_req_set, 0, 0) @[tsm.scala 181:42]
      when _T_29 : @[tsm.scala 181:49]
        entry_mmu_pe_req <= UInt<1>("h1") @[tsm.scala 182:24]
        node _entry_mmu_pe_req_src_T = or(entry_mmu_pe_req_src, wire.entry_mmu_pe_req_set_src) @[tsm.scala 183:52]
        entry_mmu_pe_req_src <= _entry_mmu_pe_req_src_T @[tsm.scala 183:28]
    io.entry_mmu_pe_req <= entry_mmu_pe_req @[tsm.scala 185:25]
    io.entry_mmu_pe_req_src <= entry_mmu_pe_req_src @[tsm.scala 186:29]
    node _wire_entry_stride_ext_T = bits(io.entry_stride_neg, 0, 0) @[Bitwise.scala 74:15]
    node _wire_entry_stride_ext_T_1 = mux(_wire_entry_stride_ext_T, UInt<21>("h1fffff"), UInt<21>("h0")) @[Bitwise.scala 74:12]
    node _wire_entry_stride_ext_T_2 = cat(UInt<8>("h0"), _wire_entry_stride_ext_T_1) @[tsm.scala 189:81]
    node _wire_entry_stride_ext_T_3 = bits(io.entry_stride, 10, 0) @[tsm.scala 189:140]
    node _wire_entry_stride_ext_T_4 = cat(_wire_entry_stride_ext_T_2, _wire_entry_stride_ext_T_3) @[tsm.scala 189:122]
    wire.entry_stride_ext <= _wire_entry_stride_ext_T_4 @[tsm.scala 189:25]
    node _wire_entry_pipe_va_add_stride_T = bits(io.pipe_va, 31, 0) @[tsm.scala 192:110]
    node _wire_entry_pipe_va_add_stride_T_1 = cat(UInt<8>("h0"), _wire_entry_pipe_va_add_stride_T) @[tsm.scala 192:97]
    node _wire_entry_pipe_va_add_stride_T_2 = bits(wire.entry_stride_ext, 31, 0) @[tsm.scala 192:148]
    node _wire_entry_pipe_va_add_stride_T_3 = add(_wire_entry_pipe_va_add_stride_T_1, _wire_entry_pipe_va_add_stride_T_2) @[tsm.scala 192:125]
    node _wire_entry_pipe_va_add_stride_T_4 = tail(_wire_entry_pipe_va_add_stride_T_3, 1) @[tsm.scala 192:125]
    wire.entry_pipe_va_add_stride <= _wire_entry_pipe_va_add_stride_T_4 @[tsm.scala 192:34]
    node _wire_entry_sum_4k_T = bits(io.pipe_va, 11, 0) @[tsm.scala 194:35]
    node _wire_entry_sum_4k_T_1 = bits(wire.entry_stride_ext, 12, 0) @[tsm.scala 194:65]
    node _wire_entry_sum_4k_T_2 = add(_wire_entry_sum_4k_T, _wire_entry_sum_4k_T_1) @[tsm.scala 194:42]
    node _wire_entry_sum_4k_T_3 = tail(_wire_entry_sum_4k_T_2, 1) @[tsm.scala 194:42]
    wire.entry_sum_4k <= _wire_entry_sum_4k_T_3 @[tsm.scala 194:21]
    node _wire_entry_inst_new_va_cross_4k_T = bits(wire.entry_sum_4k, 12, 12) @[tsm.scala 196:57]
    wire.entry_inst_new_va_cross_4k <= _wire_entry_inst_new_va_cross_4k_T @[tsm.scala 196:37]
    node _wire_entry_biu_pe_req_set_T = bits(io.entry_l2_biu_pe_req_set, 0, 0) @[tsm.scala 201:59]
    node _wire_entry_biu_pe_req_set_T_1 = bits(io.entry_l1_biu_pe_req_set, 0, 0) @[tsm.scala 201:97]
    node _wire_entry_biu_pe_req_set_T_2 = or(_wire_entry_biu_pe_req_set_T, _wire_entry_biu_pe_req_set_T_1) @[tsm.scala 201:66]
    wire.entry_biu_pe_req_set <= _wire_entry_biu_pe_req_set_T_2 @[tsm.scala 201:29]
    node _wire_entry_biu_pe_req_set_src_T = cat(io.entry_l2_biu_pe_req_set, io.entry_l1_biu_pe_req_set) @[tsm.scala 202:64]
    wire.entry_biu_pe_req_set_src <= _wire_entry_biu_pe_req_set_src_T @[tsm.scala 202:34]
    node _wire_entry_mmu_pe_req_set_T = bits(io.entry_l2_mmu_pe_req_set, 0, 0) @[tsm.scala 206:59]
    node _wire_entry_mmu_pe_req_set_T_1 = bits(io.entry_l1_mmu_pe_req_set, 0, 0) @[tsm.scala 206:97]
    node _wire_entry_mmu_pe_req_set_T_2 = or(_wire_entry_mmu_pe_req_set_T, _wire_entry_mmu_pe_req_set_T_1) @[tsm.scala 206:66]
    wire.entry_mmu_pe_req_set <= _wire_entry_mmu_pe_req_set_T_2 @[tsm.scala 206:29]
    node _wire_entry_mmu_pe_req_set_src_T = cat(io.entry_l2_mmu_pe_req_set, io.entry_l1_mmu_pe_req_set) @[tsm.scala 207:64]
    wire.entry_mmu_pe_req_set_src <= _wire_entry_mmu_pe_req_set_src_T @[tsm.scala 207:34]

